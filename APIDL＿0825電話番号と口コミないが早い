from flask import Flask, render_template, request, send_file
import requests
import pandas as pd
from io import BytesIO

app = Flask(__name__)
app.secret_key = 'your_secret_key'  # セッション管理のための秘密鍵を設定

# APIキーをここに記入
API_KEY = '634c407235d16f2b'

# リクエストURL
URL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/'

def get_data(keywords, count=None):
    keyword_str = ' '.join(keywords)  # 検索キーワードをスペースで結合
    params = {
        'key': API_KEY,
        'keyword': keyword_str,
        'format': 'json',
        'count': 100,  # 1回のリクエストで最大100件取得
        'start': 1  # 取得開始位置
    }
    
    results = []
    total_results = 0
    max_results = count if count else 1000  # 指定された件数、または最大1000件を取得する
    
    for loop_count in range(max_results // 100 + 1):
        response = requests.get(URL, params=params)
        datum = response.json()

        if response.status_code != 200:
            break
        
        if 'results' not in datum or 'shop' not in datum['results']:
            break
        
        stores = datum['results']['shop']
        results.extend([{
            '店舗名': store.get('name', 'N/A'),
            '電話番号のURL': store.get('urls', {}).get('pc', 'N/A').split('?')[0].rstrip('/') + "/tel" if store.get('urls', {}).get('pc', 'N/A') != 'N/A' else 'N/A',
            'サービスエリア名': store.get('service_area', {}).get('name', 'N/A'),
            '住所': store.get('address', 'N/A'),
            '口コミ': store.get('catch', 'N/A'),
            '営業時間': store.get('open', 'N/A'),
            '定休日': store.get('close', 'N/A'),
            'ディナー予算': store.get('budget', {}).get('average', 'N/A'),
            '総席数': store.get('capacity', 'N/A'),
            'ジャンル名': store.get('genre', {}).get('name', 'N/A'),
            'サブジャンル名': store.get('sub_genre', {}).get('name', 'N/A'),
            'PC向けURL': store.get('urls', {}).get('pc', 'N/A'),
        } for store in stores])

        total_results += len(stores)

        if total_results >= max_results:
            break

        if len(stores) < 100:
            break
        
        params['start'] += 100
    
    return results[:max_results]  # 指定された件数、または最大1000件を返す

@app.route('/', methods=['GET', 'POST'])
def index():
    results = []
    if request.method == 'POST':
        keywords = request.form.get('keywords').split()  # キーワードをスペースで区切ってリスト化
        count = request.form.get('count')
        count = int(count) if count else None
        
        results = get_data(keywords, count)
        
    return render_template('index.html', results=results)

@app.route('/download_excel', methods=['POST'])
def download_excel():
    keywords = request.form.get('keywords').split()  # キーワードを再度取得
    count = request.form.get('count')
    count = int(count) if count else None
    
    # APIリクエストを再度実行して最新データを取得
    results = get_data(keywords, count)
    
    filename = request.form.get('filename')  # ファイル名をフォームから取得
    filename = filename if filename else 'HotPepper_Results'
    
    # データフレームに変換してカラムの順序を指定
    df = pd.DataFrame.from_dict(results)
    df = df[['店舗名', 'サービスエリア名', '住所', '口コミ', '営業時間', '定休日', 'ディナー予算', '総席数', 'ジャンル名', 'サブジャンル名', 'PC向けURL']]
    
    # DataFrameをBytesIOオブジェクトに書き込み
    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        df.to_excel(writer, index=False, sheet_name='Results')  # Excelファイルに書き込み
    
    output.seek(0)
    
    return send_file(output, as_attachment=True, download_name=f"{filename}.xlsx", mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')

if __name__ == '__main__':
    app.run(debug=True)
