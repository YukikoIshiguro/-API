from flask import Flask, render_template, request, send_file
import requests
import pandas as pd
from bs4 import BeautifulSoup
from io import BytesIO

app = Flask(__name__)

API_KEY = '634c407235d16f2b'
URL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/'

def get_data(keywords, count=None):
    keyword_str = ' '.join(keywords)
    params = {
        'key': API_KEY,
        'keyword': keyword_str,
        'format': 'json',
        'count': count if count else 100,
        'start': 1
    }
    
    results = []
    while True:
        response = requests.get(URL, params=params)
        datum = response.json()

        if response.status_code != 200:
            break
        
        if 'results' not in datum or 'shop' not in datum['results']:
            break
        
        stores = datum['results']['shop']
        results.extend([{
            '店舗名': store.get('name', 'N/A'),
            '電話番号のURL': store.get('urls', {}).get('pc', 'N/A').split('?')[0].rstrip('/') + "/tel" if store.get('urls', {}).get('pc', 'N/A') != 'N/A' else 'N/A',
            'サービスエリア名': store.get('service_area', {}).get('name', 'N/A'),
            '住所': store.get('address', 'N/A'),
            '口コミ': store.get('catch', 'N/A'),
            '営業時間': store.get('open', 'N/A'),
            '定休日': store.get('close', 'N/A'),
            'ディナー予算': store.get('budget', {}).get('average', 'N/A'),
            'お店キャッチ': store.get('catch', 'N/A'),
            '総席数': store.get('capacity', 'N/A'),
            'ジャンル名': store.get('genre', {}).get('name', 'N/A'),
            'サブジャンル名': store.get('sub_genre', {}).get('name', 'N/A'),
            'PC向けURL': store.get('urls', {}).get('pc', 'N/A'),
            '口コミ数': 'N/A'
        } for store in stores])

        if not count:
            if len(results) >= datum['results']['results_available']:
                break
            params['start'] += 100
        else:
            break

    return results

def get_review_count(url):
    review_count_text = "口コミ数なし"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            li_element = soup.select_one('li.recommendReport > a')
            if li_element:
                p_element = li_element.find_next('p', class_='recommendReportNum')
                if p_element:
                    review_count_text = p_element.find('span').get_text()
    except Exception as e:
        print(f"口コミ数取得中にエラーが発生しました: {e}")

    return review_count_text

def get_phone_number(url):
    phone_number_text = "電話番号なし"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.content, 'html.parser')
            phone_number_tag = soup.select_one('div.storeTelephoneWrap > p.telephoneNumber')
            if phone_number_tag:
                phone_number_text = phone_number_tag.get_text().strip()
    except Exception as e:
        print(f"電話番号取得中にエラーが発生しました: {e}")

    return phone_number_text

@app.route('/', methods=['GET', 'POST'])
def index():
    results = []
    if request.method == 'POST':
        keywords = request.form.get('keywords').split()
        count = request.form.get('count')
        count = int(count) if count else None
        
        results = get_data(keywords, count)
        
        for result in results:
            result['電話番号'] = get_phone_number(result['電話番号のURL'])
            result['口コミ数'] = get_review_count(result['PC向けURL'])

    return render_template('index.html', results=results)

@app.route('/download_excel', methods=['POST'])
def download_excel():
    keywords = request.form.get('keywords').split()
    count = request.form.get('count')
    count = int(count) if count else None
    filename = request.form.get('filename')
    filename = filename if filename else 'HotPepper_Results.xlsx'
    
    results = get_data(keywords, count)
    
    for result in results:
        result['電話番号'] = get_phone_number(result['電話番号のURL'])
        result['口コミ数'] = get_review_count(result['PC向けURL'])
    
    df = pd.DataFrame(results)
    
    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        df.to_excel(writer, index=False, sheet_name='Results')
    
    output.seek(0)
    
    return send_file(output, as_attachment=True, download_name=f"{filename}.xlsx", mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')

if __name__ == '__main__':
    app.run(debug=True)
#app.py Flask 色合いシンプルFlask機能OK　下はindex.htlml
------------------------------------------
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>HotPepper グルメ検索</title>
    <style>
        /* 省略：スタイルは元のコードと同じ */
    </style>
</head>
<body>
    <header>
        <h1>HotPepper グルメ検索</h1>
        <p>Powered by ホットペッパーグルメ Webサービス</p>
    </header>

    <form method="POST">
        <label for="keywords">検索キーワード (スペースで区切って入力):</label>
        <input type="text" id="keywords" name="keywords" required>
        <br><br>
        <label for="count">取得件数 (空白の場合はすべて取得):</label>
        <input type="text" id="count" name="count">
        <br><br>
        <button type="submit">検索</button>
    </form>

    {% if results %}
    <h2>検索結果</h2>
    <table border="1">
        <tr>
            <th>店舗名</th>
            <th>電話番号</th>
            <th>住所</th>
            <th>口コミ</th>
            <th>営業時間</th>
            <th>定休日</th>
            <th>ディナー予算</th>
            <th>お店キャッチ</th>
            <th>総席数</th>
            <th>ジャンル名</th>
            <th>サブジャンル名</th>
            <th>口コミ数</th>
            <th>サービスエリア名</th>
            <th>PC向けURL</th> <!-- 追加 -->
        </tr>
        {% for result in results %}
        <tr>
            <td>{{ result.店舗名 }}</td>
            <td>{{ result.電話番号 }}</td>
            <td>{{ result.住所 }}</td>
            <td>{{ result.口コミ }}</td>
            <td>{{ result.営業時間 }}</td>
            <td>{{ result.定休日 }}</td>
            <td>{{ result.ディナー予算 }}</td>
            <td>{{ result.お店キャッチ }}</td>
            <td>{{ result.総席数 }}</td>
            <td>{{ result.ジャンル名 }}</td>
            <td>{{ result.サブジャンル名 }}</td>
            <td>{{ result.口コミ数 }}</td>
            <td>{{ result.サービスエリア名 }}</td>
            <td><a href="{{ result.PC向けURL }}" target="_blank">{{ result.PC向けURL }}</a></td> <!-- 追加 -->
        </tr>
        {% endfor %}
    </table>
    {% endif %}
</body>
</html>
